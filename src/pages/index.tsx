import Head from 'next/head';

import { GetServerSideProps, NextPage } from 'next';
import useAuth, { getMe } from '@/hooks/api/useAuth';

import { dehydrate, QueryClient } from '@tanstack/react-query';
import { QUERYKEY_CONFERENCE, QUERYKEY_USER } from 'constants/queryKeys';

import Layout from '@/components/templates/Layout/Layout';

import { getConference, useGetConference } from '@/hooks/api/useConference';
import Conferences from '@/components/organisms/Conferences/Conferences';
import { withAuth } from '@/utils/getServerSide';

const Home: NextPage = () => {
  const { user } = useAuth();

  const { conferences } = useGetConference(user);

  return (
    <>
      <Head>
        <title>Conference</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <section>
          {user && conferences ? (
            <Conferences conferences={conferences} />
          ) : (
            <div></div>
          )}
        </section>
      </Layout>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = withAuth(async () => {
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery([QUERYKEY_USER], getMe, {
    staleTime: 900,
  });

  await queryClient.prefetchQuery([QUERYKEY_CONFERENCE], getConference, {
    staleTime: 900,
  });

  return {
    props: { dehydratedState: dehydrate(queryClient) },
  };
});

export default Home;
