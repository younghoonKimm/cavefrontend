import Head from 'next/head';
import Image from 'next/image';

import { useRouter } from 'next/router';

import { GetServerSideProps, NextPage } from 'next';

import { getProfileAPI, logOutAPI } from '@/api/auth';
import useAuth from '@/hooks/useAuth';

import { dehydrate, QueryClient } from '@tanstack/react-query';
import { QUERYKEY_USER } from 'constants/queryKeys';
import { Suspense, useEffect, useState } from 'react';
import useSocket from '@/hooks/useSocket';
import Layout from '@/components/templates/Layout/Layout';

const Home: NextPage = () => {
  const router = useRouter();

  const { user } = useAuth();
  const [socket, disconnect] = useSocket('1');

  useEffect(() => {
    if (user) {
      socket?.emit('login', {
        id: 'ds',
        conference: ['1', '2', '3'],
      });
    }
  }, [user, socket]);

  useEffect(() => {
    return () => {
      disconnect();
    };
  }, [user, disconnect]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div>
          <Suspense fallback={<div></div>}></Suspense>

          <p></p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>
      </Layout>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const queryClient = new QueryClient();

  const accessToken = req.cookies['CAV_ACC'];

  if (accessToken) {
    await queryClient.prefetchQuery([QUERYKEY_USER], getProfileAPI);
  }

  return {
    props: { dehydratedState: dehydrate(queryClient) },
  };
};

export default Home;
